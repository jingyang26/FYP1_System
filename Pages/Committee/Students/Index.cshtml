@page
@model FYP1System.Pages.Committee.Students.IndexModel
@{
    ViewData["Title"] = "Manage Students";
}

<div class="role-dashboard committee-dashboard">
    <!-- Header Section -->
    <div class="dashboard-header mb-4">
        <div class="row align-items-center">
            <div class="col-md-8">
                <h1 class="dashboard-title">
                    <i class="bi bi-people me-3"></i>
                    Manage Students
                </h1>
                <p class="dashboard-subtitle">Manage student registrations and supervisor assignments</p>
            </div>
            <div class="col-md-4 text-end">
                <div class="dashboard-meta">
                    <a href="/Committee" class="btn btn-outline-light btn-sm me-2">
                        <i class="bi bi-arrow-left me-1"></i>Back to Dashboard
                    </a>
                    <span class="badge badge-light-blue px-3 py-2">
                        <i class="bi bi-calendar me-2"></i>
                        <span id="current-datetime"></span>
                    </span>
                </div>
            </div>
        </div>
    </div>

    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-light-blue alert-dismissible fade show" role="alert">
                        <i class="bi bi-check-circle me-2"></i>@TempData["SuccessMessage"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                }

                <!-- Filter Section -->
                <div class="content-card mb-4">
                    <div class="card-header bg-transparent border-0 pt-3">
                        <h5 class="mb-0">
                            <i class="bi bi-funnel me-2"></i>Filter Students
                        </h5>
                    </div>
                    <div class="card-body">
                        <form method="post" asp-page-handler="Filter">
                            <div class="row g-3">
                                <div class="col-md-3">
                                    <label class="form-label">Session</label>
                                    <input asp-for="SelectedSession" class="form-control" placeholder="e.g., 2024/2025" />
                                </div>
                                <div class="col-md-3">
                                    <label class="form-label">Semester</label>
                                    <select asp-for="SelectedSemester" class="form-select">
                                        <option value="">All Semesters</option>
                                        <option value="1">Semester 1</option>
                                        <option value="2">Semester 2</option>
                                        <option value="3">Semester 3</option>
                                    </select>
                                </div>
                                <div class="col-md-4">
                                    <label class="form-label">Program</label>
                                    <select asp-for="SelectedProgramId" asp-items="Model.ProgramList" class="form-select">
                                        <option value="">All Programs</option>
                                    </select>
                                </div>
                                <div class="col-md-2 d-flex align-items-end">
                                    <button type="submit" class="btn btn-light-blue w-100">
                                        <i class="bi bi-search me-1"></i>Filter
                                    </button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>

            <!-- Students List -->
            <div class="mb-4">
                <h3>Students List (@Model.Students.Count)</h3>
                <p>Active: @Model.Students.Count(s => s.IsActive) | Inactive: @Model.Students.Count(s => !s.IsActive)</p>
            </div>

            <div>
            @if (Model.Students.Any())
            {
                <table class="table table-striped table-bordered">
                    <thead class="table-dark">
                        <tr>
                            <th width="200">Student</th>
                            <th width="120">Student ID</th>
                            <th width="150">Program</th>
                            <th width="140">Session/Semester</th>
                            <th width="80">GPA</th>
                            <th width="250">Supervisor</th>
                            <th width="100">Status</th>
                            <th width="200">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var student in Model.Students)
                        {
                            <tr>
                                <td>
                                    <strong>@student.User?.FullName</strong><br>
                                    <small>@student.User?.Email</small>
                                </td>
                                <td>@student.StudentId</td>
                                <td>@student.Program?.Name</td>
                                <td>
                                    @student.Session
                                    @if (student.Semester.HasValue)
                                    {
                                        <br><small>Semester @student.Semester</small>
                                    }
                                </td>
                                <td>
                                    @if (student.GPA.HasValue)
                                    {
                                        <span class="badge @(student.GPA >= 3.5m ? "bg-success" : student.GPA >= 3.0m ? "bg-warning" : "bg-danger")">
                                            @student.GPA.Value.ToString("F2")
                                        </span>
                                    }
                                    else
                                    {
                                        <span>N/A</span>
                                    }
                                </td>
                                <td>
                                    @if (student.Supervisor?.User != null)
                                    {
                                        <strong>@student.Supervisor.User.FullName</strong>
                                        @if (!string.IsNullOrEmpty(student.Supervisor.Domain))
                                        {
                                            <br><small>@student.Supervisor.Domain</small>
                                        }
                                    }
                                    else if (student.SupervisorId.HasValue)
                                    {
                                        <span class="text-danger">ID: @student.SupervisorId (Not Loaded)</span>
                                    }
                                    else
                                    {
                                        <span class="text-warning">Not Assigned</span>
                                    }
                                </td>
                                <td>
                                    @if (student.IsActive)
                                    {
                                        <span class="badge bg-success">Active</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">Inactive</span>
                                    }
                                </td>
                                <td>
                                    <!-- Assign Supervisor -->
                                    <div class="dropdown d-inline">
                                        <button class="btn btn-sm btn-outline-primary dropdown-toggle" 
                                                type="button" data-bs-toggle="dropdown">
                                            Assign Supervisor
                                        </button>
                                        <ul class="dropdown-menu">
                                            @foreach (var supervisor in Model.AvailableSupervisors)
                                            {
                                                <li>
                                                    <form method="post" asp-page-handler="AssignSupervisor" class="d-inline">
                                                        <input type="hidden" name="studentId" value="@student.Id" />
                                                        <input type="hidden" name="supervisorId" value="@supervisor.Id" />
                                                        <input type="hidden" name="SelectedSession" value="@Model.SelectedSession" />
                                                        <input type="hidden" name="SelectedSemester" value="@Model.SelectedSemester" />
                                                        <input type="hidden" name="SelectedProgramId" value="@Model.SelectedProgramId" />
                                                        <button type="submit" class="dropdown-item @(student.SupervisorId == supervisor.Id ? "active" : "")">
                                                            @supervisor.User?.FullName
                                                            @if (!string.IsNullOrEmpty(supervisor.Domain))
                                                            {
                                                                <br><small>(@supervisor.Domain)</small>
                                                            }
                                                        </button>
                                                    </form>
                                                </li>
                                            }
                                        </ul>
                                    </div>

                                    <!-- Toggle Status -->
                                    <form method="post" asp-page-handler="ToggleStatus" class="d-inline">
                                        <input type="hidden" name="studentId" value="@student.Id" />
                                        <input type="hidden" name="SelectedSession" value="@Model.SelectedSession" />
                                        <input type="hidden" name="SelectedSemester" value="@Model.SelectedSemester" />
                                        <input type="hidden" name="SelectedProgramId" value="@Model.SelectedProgramId" />
                                        <button type="submit" class="btn btn-sm @(student.IsActive ? "btn-outline-danger" : "btn-outline-success")"
                                                onclick="return confirm('@(student.IsActive ? "Deactivate" : "Activate") this student?')">
                                            @(student.IsActive ? "Deactivate" : "Activate")
                                        </button>
                                    </form>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <div class="text-center py-5">
                    <h5>No students found</h5>
                    <p>No students match the current filter criteria.</p>
                </div>
            }
            
            <!-- Summary Information -->
            @if (Model.Students.Any())
            {
                <div class="row mt-4">
                    <div class="col-md-3">
                        <div class="border p-3 text-center">
                            <h5>@Model.Students.Count</h5>
                            <p>Total Students</p>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="border p-3 text-center">
                            <h5>@Model.Students.Count(s => s.SupervisorId.HasValue)</h5>
                            <p>With Supervisor</p>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="border p-3 text-center">
                            <h5>@Model.Students.Count(s => !s.SupervisorId.HasValue)</h5>
                            <p>Without Supervisor</p>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="border p-3 text-center">
                            <h5>@(Model.Students.Where(s => s.GPA.HasValue).Average(s => s.GPA) ?? 0).ToString("F2")</h5>
                            <p>Average GPA</p>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<style>
/* Simple table styling */
.table {
    border: 1px solid #dee2e6;
}

.table td {
    vertical-align: middle;
    padding: 12px;
    word-wrap: break-word;
}

.table th {
    background-color: #343a40;
    color: white !important;
    font-weight: 600;
    padding: 12px;
}

/* Force all text to be black */
* {
    color: #000 !important;
}

/* Override for specific elements that should keep their colors */
.table th {
    color: white !important;
}

.badge.bg-success {
    color: #fff !important;
}

.badge.bg-danger {
    color: #fff !important;
}

.badge.bg-warning {
    color: #000 !important;
}

.btn {
    color: inherit !important;
}

.btn-primary {
    color: #fff !important;
}

.btn-outline-primary {
    color: #0d6efd !important;
}

.btn-outline-danger {
    color: #dc3545 !important;
}

.btn-outline-success {
    color: #198754 !important;
}

/* Dropdown styling */
.dropdown-menu {
    min-width: 250px;
}

.dropdown-item {
    padding: 8px 16px;
    white-space: normal;
    color: #000 !important;
}

.dropdown-item:hover {
    background-color: #f8f9fa;
}

.dropdown-item.active {
    background-color: #0d6efd;
    color: #fff !important;
}

.dropdown-item small {
    color: #6c757d !important;
}

/* Summary boxes */
.border {
    border: 1px solid #dee2e6 !important;
}

/* Specific text color fixes */
h1, h2, h3, h4, h5, h6 {
    color: #000 !important;
}

p, span, div, label, td, li, small {
    color: #000 !important;
}

.text-danger {
            </div>
        </div>
    </div>
</div>

<style>
.text-success {
    color: #28a745 !important;
}

.text-danger {
    color: #dc3545 !important;
}

.text-warning {
    color: #ffc107 !important;
}

.alert {
    color: #000 !important;
}
</style>
