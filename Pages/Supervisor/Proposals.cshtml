@page
@model FYP1System.Pages.Supervisor.ProposalsModel
@{
    ViewData["Title"] = "My Students' Proposals";
}

<style>
/* Supervisor Proposals Styling - Light Blue Theme */
.supervisor-dashboard {
    padding: 2rem 0;
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    min-height: calc(100vh - 200px);
}

/* Dashboard Header */
.dashboard-header {
    background: linear-gradient(135deg, #6fb3d3 0%, #5dade2 100%);
    color: white;
    padding: 2rem;
    border-radius: 15px;
    box-shadow: 0 10px 30px rgba(111, 179, 211, 0.3);
    position: relative;
    overflow: hidden;
    margin-bottom: 2rem;
}

.dashboard-header::before {
    content: '';
    position: absolute;
    top: -50%;
    right: -20%;
    width: 100%;
    height: 200%;
    background: linear-gradient(45deg, rgba(255,255,255,0.1) 0%, transparent 100%);
    transform: rotate(45deg);
}

.dashboard-title {
    font-size: 2.5rem;
    font-weight: 700;
    margin: 0;
    position: relative;
    z-index: 2;
}

.dashboard-subtitle {
    font-size: 1.1rem;
    opacity: 0.9;
    margin: 0;
    position: relative;
    z-index: 2;
}

.dashboard-meta {
    position: relative;
    z-index: 2;
}

.dashboard-meta .badge {
    font-size: 0.9rem;
    border-radius: 20px;
    box-shadow: 0 4px 15px rgba(0,0,0,0.2);
}

/* Content Cards */
.content-card {
    background: white;
    border-radius: 15px;
    box-shadow: 0 8px 25px rgba(0,0,0,0.1);
    border: none;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
}

.content-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 5px;
    background: linear-gradient(90deg, #6fb3d3, #5dade2);
}

.content-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 12px 35px rgba(0,0,0,0.15);
}

/* Button Styling */
.btn-light-blue {
    background: linear-gradient(135deg, #6fb3d3 0%, #5dade2 100%);
    border: none;
    color: white;
    border-radius: 8px;
    padding: 0.5rem 1rem;
    font-weight: 600;
    transition: all 0.3s ease;
}

.btn-light-blue:hover {
    background: linear-gradient(135deg, #5dade2 0%, #4a90e2 100%);
    color: white;
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(111, 179, 211, 0.3);
}

.btn-outline-light-blue {
    border: 2px solid #6fb3d3;
    color: #6fb3d3;
    background: transparent;
    border-radius: 8px;
    padding: 0.5rem 1rem;
    font-weight: 600;
    transition: all 0.3s ease;
}

.btn-outline-light-blue:hover {
    background: #6fb3d3;
    color: white;
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(111, 179, 211, 0.3);
}

/* Badge Styling */
.badge-light-blue {
    background: linear-gradient(135deg, #6fb3d3 0%, #5dade2 100%);
    color: white;
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-weight: 600;
}

/* Table Styling */
.table-responsive {
    border-radius: 10px;
    overflow: hidden;
}

.table thead th {
    background: linear-gradient(135deg, #6fb3d3 0%, #5dade2 100%);
    color: white;
    border: none;
    font-weight: 600;
    padding: 1rem;
}

.table tbody tr {
    transition: all 0.3s ease;
}

.table tbody tr:hover {
    background-color: rgba(111, 179, 211, 0.1);
    transform: translateX(5px);
}
</style>

<div class="supervisor-dashboard">
    <!-- Header Section -->
    <div class="dashboard-header">
        <div class="row align-items-center">
            <div class="col-md-8">
                <h1 class="dashboard-title">
                    <i class="fas fa-file-alt me-3"></i>
                    My Students' Proposals
                </h1>
                <p class="dashboard-subtitle">Monitor and evaluate student proposals</p>
            </div>
            <div class="col-md-4 text-end">
                <div class="dashboard-meta">
                    <a href="/Supervisor" class="btn btn-outline-light btn-sm me-2">
                        <i class="fas fa-arrow-left me-1"></i>Back to Dashboard
                    </a>
                    <span class="badge badge-light-blue px-3 py-2">
                        <i class="bi bi-calendar me-2"></i>
                        <span id="current-datetime"></span>
                    </span>
                </div>
            </div>
        </div>
    </div>

    <div class="container-fluid">
        <!-- Filter Section -->
        <div class="content-card mb-4">
            <div class="card-header bg-transparent border-0 pt-3">
                <h6 class="m-0 font-weight-bold">
                    <i class="bi bi-funnel me-2"></i>Filter Proposals
                </h6>
            </div>
            <div class="card-body">
                <form method="get" class="row g-3">
                    <div class="col-md-3">
                        <label for="session" class="form-label">Session</label>
                        <select class="form-select" id="session" name="session">
                            <option value="">All Sessions</option>
                            <option value="2023/2024" selected="@(Model.SelectedSession == "2023/2024")">2023/2024</option>
                        <option value="2024/2025" selected="@(Model.SelectedSession == "2024/2025")">2024/2025</option>
                        <option value="2025/2026" selected="@(Model.SelectedSession == "2025/2026")">2025/2026</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="semester" class="form-label">Semester</label>
                    <select class="form-select" id="semester" name="semester">
                        <option value="">All Semesters</option>
                        <option value="1" selected="@(Model.SelectedSemester == 1)">Semester 1</option>
                        <option value="2" selected="@(Model.SelectedSemester == 2)">Semester 2</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="status" class="form-label">Status</label>
                    <select class="form-select" id="status" name="status">
                        <option value="">All Statuses</option>
                        <option value="Submitted" selected="@(Model.SelectedStatus == "Submitted")">Submitted</option>
                        <option value="UnderReview" selected="@(Model.SelectedStatus == "UnderReview")">Under Review</option>
                        <option value="Approved" selected="@(Model.SelectedStatus == "Approved")">Approved</option>
                        <option value="Rejected" selected="@(Model.SelectedStatus == "Rejected")">Rejected</option>
                        <option value="NeedsRevision" selected="@(Model.SelectedStatus == "NeedsRevision")">Needs Revision</option>
                    </select>
                </div>
                <div class="col-md-3 d-flex align-items-end">
                    <button type="submit" class="btn btn-light-blue me-2">
                        <i class="fas fa-filter me-1"></i>Filter
                    </button>
                    <a href="/Supervisor/Proposals" class="btn btn-outline-light-blue">
                        <i class="fas fa-times me-1"></i>Clear
                    </a>
                </div>
            </form>
        </div>
    </div>

    <!-- Proposals List -->
    <div class="card shadow">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">
                Proposals (@Model.Proposals.Count)
            </h6>
        </div>
        <div class="card-body">
            @if (Model.Proposals.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead class="table-light">
                            <tr>
                                <th>Student</th>
                                <th>Title</th>
                                <th>Type</th>
                                <th>Session/Semester</th>
                                <th>Status</th>
                                <th>Submitted</th>
                                <th>Comments</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var proposal in Model.Proposals)
                            {
                                <tr>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <div class="avatar-sm bg-primary bg-gradient rounded-circle d-flex align-items-center justify-content-center me-2">
                                                <i class="fas fa-user-graduate text-white small"></i>
                                            </div>
                                            <div>
                                                <div class="fw-bold">@proposal.Student.User.FullName</div>
                                                <small class="text-muted">@proposal.Student.StudentId</small>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="fw-bold">@proposal.Title</div>
                                        @if (!string.IsNullOrEmpty(proposal.Description))
                                        {
                                            <small class="text-muted">@(proposal.Description.Length > 100 ? proposal.Description.Substring(0, 100) + "..." : proposal.Description)</small>
                                        }
                                    </td>
                                    <td>
                                        <span class="badge bg-info">@proposal.Type</span>
                                    </td>
                                    <td>
                                        <div>@proposal.Session</div>
                                        <small class="text-muted">Semester @proposal.Semester</small>
                                    </td>
                                    <td>
                                        @{
                                            var statusBadge = proposal.Status switch
                                            {
                                                ProposalStatus.Draft => "bg-secondary",
                                                ProposalStatus.Submitted => "bg-warning",
                                                ProposalStatus.UnderReview => "bg-info",
                                                ProposalStatus.Approved => "bg-success",
                                                ProposalStatus.Rejected => "bg-danger",
                                                ProposalStatus.NeedsRevision => "bg-warning",
                                                ProposalStatus.Resubmitted => "bg-primary",
                                                _ => "bg-secondary"
                                            };
                                        }
                                        <span class="badge @statusBadge">@proposal.Status.ToString().Replace("UnderReview", "Under Review").Replace("NeedsRevision", "Needs Revision")</span>
                                    </td>
                                    <td>
                                        @if (proposal.SubmittedAt.HasValue)
                                        {
                                            <div>@proposal.SubmittedAt.Value.ToString("dd/MM/yyyy")</div>
                                            <small class="text-muted">@proposal.SubmittedAt.Value.ToString("HH:mm")</small>
                                        }
                                        else
                                        {
                                            <span class="text-muted">Not submitted</span>
                                        }
                                    </td>
                                    <td>
                                        <span class="badge bg-light text-dark">@proposal.Comments.Count</span>
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <a href="/Supervisor/Proposals/Details/@proposal.Id" class="btn btn-sm btn-outline-primary" title="View Details">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            @if (proposal.Status == ProposalStatus.Submitted || proposal.Status == ProposalStatus.Resubmitted)
                                            {
                                                <a href="/Supervisor/Proposals/Review/@proposal.Id" class="btn btn-sm btn-outline-success" title="Add Comments">
                                                    <i class="fas fa-comment"></i>
                                                </a>
                                            }
                                            @if (!string.IsNullOrEmpty(proposal.FilePath))
                                            {
                                                <a href="/Supervisor/Proposals/Download/@proposal.Id" class="btn btn-sm btn-outline-info" title="Download Proposal">
                                                    <i class="fas fa-download"></i>
                                                </a>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-file-alt fa-3x text-muted mb-3"></i>
                    <h5 class="text-muted">No proposals found</h5>
                    <p class="text-muted">No proposals match the current filter criteria.</p>
                </div>
            }
        </div>
    </div>
</div>

<style>
    .avatar-sm {
        width: 32px;
        height: 32px;
        font-size: 0.75rem;
    }
    
    .btn-group .btn {
        margin-right: 2px;
    }
    
    .btn-group .btn:last-child {
        margin-right: 0;
    }
</style>

<script>
// Update current date and time
function updateDateTime() {
    const now = new Date();
    const options = { 
        year: 'numeric', 
        month: 'short', 
        day: 'numeric',
        hour: '2-digit',
        minute: '2-digit'
    };
    const datetimeElement = document.getElementById('current-datetime');
    if (datetimeElement) {
        datetimeElement.textContent = now.toLocaleDateString('en-US', options);
    }
}

document.addEventListener('DOMContentLoaded', function() {
    updateDateTime();
    setInterval(updateDateTime, 60000); // Update every minute
});
</script>
