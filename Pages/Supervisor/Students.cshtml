@page
@model FYP1System.Pages.Supervisor.StudentsModel
@{
    ViewData["Title"] = "My Students";
}

<style>
/* Supervisor Dashboard Styling - Light Blue Theme */
.supervisor-dashboard {
    padding: 2rem 0;
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    min-height: calc(100vh - 200px);
}

/* Dashboard Header */
.dashboard-header {
    background: linear-gradient(135deg, #6fb3d3 0%, #5dade2 100%);
    color: white;
    padding: 2rem;
    border-radius: 15px;
    box-shadow: 0 10px 30px rgba(111, 179, 211, 0.3);
    position: relative;
    overflow: hidden;
}

.dashboard-header::before {
    content: '';
    position: absolute;
    top: -50%;
    right: -20%;
    width: 100%;
    height: 200%;
    background: linear-gradient(45deg, rgba(255,255,255,0.1) 0%, transparent 100%);
    transform: rotate(45deg);
}

.dashboard-title {
    font-size: 2.5rem;
    font-weight: 700;
    margin: 0;
    position: relative;
    z-index: 2;
}

.dashboard-subtitle {
    font-size: 1.1rem;
    opacity: 0.9;
    margin: 0;
    position: relative;
    z-index: 2;
}

.dashboard-meta {
    position: relative;
    z-index: 2;
}

.dashboard-meta .badge {
    font-size: 0.9rem;
    border-radius: 20px;
    box-shadow: 0 4px 15px rgba(0,0,0,0.2);
}

/* Filter and Content Cards */
.content-card {
    background: white;
    border-radius: 15px;
    box-shadow: 0 8px 25px rgba(0,0,0,0.1);
    border: none;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
}

.content-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 5px;
    background: linear-gradient(90deg, #6fb3d3, #5dade2);
}

.content-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 12px 35px rgba(0,0,0,0.15);
}

/* Table Styling */
.table-responsive {
    border-radius: 10px;
    overflow: hidden;
}

.table thead th {
    background: linear-gradient(135deg, #6fb3d3 0%, #5dade2 100%);
    color: white;
    border: none;
    font-weight: 600;
    padding: 1rem;
}

.table tbody tr {
    transition: all 0.3s ease;
}

.table tbody tr:hover {
    background-color: rgba(111, 179, 211, 0.1);
    transform: translateX(5px);
}

/* Button Styling */
.btn-light-blue {
    background: linear-gradient(135deg, #6fb3d3 0%, #5dade2 100%);
    border: none;
    color: white;
    border-radius: 8px;
    padding: 0.5rem 1rem;
    font-weight: 600;
    transition: all 0.3s ease;
}

.btn-light-blue:hover {
    background: linear-gradient(135deg, #5dade2 0%, #4a90e2 100%);
    color: white;
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(111, 179, 211, 0.3);
}

.btn-outline-light-blue {
    border: 2px solid #6fb3d3;
    color: #6fb3d3;
    background: transparent;
    border-radius: 8px;
    padding: 0.5rem 1rem;
    font-weight: 600;
    transition: all 0.3s ease;
}

.btn-outline-light-blue:hover {
    background: #6fb3d3;
    color: white;
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(111, 179, 211, 0.3);
}

/* Badge Styling */
.badge-light-blue {
    background: linear-gradient(135deg, #6fb3d3 0%, #5dade2 100%);
    color: white;
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-weight: 600;
}

/* Empty State Styling */
.empty-state {
    text-align: center;
    padding: 3rem 2rem;
}

.empty-state i {
    font-size: 4rem;
    color: #6fb3d3;
    margin-bottom: 1rem;
}

.empty-state h5 {
    color: #495057;
    margin-bottom: 1rem;
}

.empty-state p {
    color: #6c757d;
    margin-bottom: 2rem;
}

/* Responsive Design */
@@media (max-width: 768px) {
    .dashboard-title {
        font-size: 2rem;
    }
    
    .supervisor-dashboard {
        padding: 1rem 0;
    }
    
    .dashboard-header {
        padding: 1.5rem;
    }
}

/* Animations */
@@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.supervisor-dashboard * {
    animation: fadeInUp 0.6s ease forwards;
}

.content-card:nth-child(1) { animation-delay: 0.1s; }
.content-card:nth-child(2) { animation-delay: 0.2s; }
</style>

<div class="supervisor-dashboard">
    <!-- Header Section -->
    <div class="dashboard-header mb-4">
        <div class="row align-items-center">
            <div class="col-md-8">
                <h1 class="dashboard-title">
                    <i class="bi bi-people-fill me-3"></i>
                    My Students
                </h1>
                <p class="dashboard-subtitle">Manage and monitor your supervised students</p>
            </div>
            <div class="col-md-4 text-end">
                <div class="dashboard-meta">
                    <span class="badge badge-light-blue px-3 py-2">
                        <i class="bi bi-calendar me-2"></i>
                        <span id="current-datetime"></span>
                    </span>
                </div>
            </div>
        </div>
    </div>

    <div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <!-- Filter Section -->
            <div class="content-card mb-4">
                <div class="card-body">
                    <h5 class="card-title mb-3">
                        <i class="bi bi-funnel me-2"></i>Filter Students
                    </h5>
                    <form method="get" class="row g-3">
                        <div class="col-md-4">
                            <label for="session" class="form-label">Session</label>
                            <select class="form-select" id="session" name="session">
                                <option value="">All Sessions</option>
                                <option value="2023/2024" selected="@(Model.SelectedSession == "2023/2024")">2023/2024</option>
                                <option value="2024/2025" selected="@(Model.SelectedSession == "2024/2025")">2024/2025</option>
                                <option value="2025/2026" selected="@(Model.SelectedSession == "2025/2026")">2025/2026</option>
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label for="semester" class="form-label">Semester</label>
                            <select class="form-select" id="semester" name="semester">
                                <option value="">All Semesters</option>
                                <option value="1" selected="@(Model.SelectedSemester == 1)">1</option>
                                <option value="2" selected="@(Model.SelectedSemester == 2)">2</option>
                                <option value="3" selected="@(Model.SelectedSemester == 3)">3</option>
                            </select>
                        </div>
                        <div class="col-md-4 d-flex align-items-end">
                            <button type="submit" class="btn btn-light-blue me-2">
                                <i class="bi bi-search"></i> Filter
                            </button>
                            <a href="@Url.Page("Students")" class="btn btn-outline-light-blue">
                                <i class="bi bi-arrow-clockwise"></i> Reset
                            </a>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Students List -->
            @if (Model.MyStudents.Any())
            {
                <div class="content-card">
                    <div class="card-header bg-transparent border-0 pt-3">
                        <h5 class="mb-0">
                            <i class="bi bi-people me-2"></i>Students (@Model.MyStudents.Count)
                        </h5>
                    </div>
                    <div class="card-body p-0">
                        <div class="table-responsive">
                            <table class="table table-hover mb-0">
                                <thead>
                                    <tr>
                                        <th><i class="bi bi-card-text me-2"></i>Student ID</th>
                                        <th><i class="bi bi-person me-2"></i>Name</th>
                                        <th><i class="bi bi-envelope me-2"></i>Email</th>
                                        <th><i class="bi bi-book me-2"></i>Program</th>
                                        <th><i class="bi bi-calendar-event me-2"></i>Session</th>
                                        <th><i class="bi bi-calendar3 me-2"></i>Semester</th>
                                        <th><i class="bi bi-check-circle me-2"></i>Status</th>
                                        <th><i class="bi bi-gear me-2"></i>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var student in Model.MyStudents)
                                    {
                                        <tr>
                                            <td class="fw-bold text-primary">@student.StudentId</td>
                                            <td>@student.User?.UserName</td>
                                            <td class="text-muted">@student.User?.Email</td>
                                            <td>@student.Program?.Name</td>
                                            <td>@student.Session</td>
                                            <td>@student.Semester</td>
                                            <td>
                                                <span class="badge badge-light-blue">
                                                    <i class="bi bi-check-circle me-1"></i>Active
                                                </span>
                                            </td>
                                            <td>
                                                <div class="btn-group btn-group-sm" role="group">
                                                    <a href="@Url.Page("/Supervisor/Students/Details", new { id = student.Id })" 
                                                       class="btn btn-outline-light-blue btn-sm" title="View Profile">
                                                        <i class="bi bi-person"></i>
                                                    </a>
                                                    <a href="@Url.Page("Proposals", new { studentId = student.Id })" 
                                                       class="btn btn-light-blue btn-sm" title="View Proposals">
                                                        <i class="bi bi-file-text"></i>
                                                    </a>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="content-card">
                    <div class="card-body empty-state">
                        <i class="bi bi-people"></i>
                        <h5 class="mt-3">No Students Found</h5>
                        <p>
                            @if (!string.IsNullOrEmpty(Model.SelectedSession) || Model.SelectedSemester.HasValue)
                            {
                                <span>No students found for the selected filters.</span>
                            }
                            else
                            {
                                <span>You currently have no students assigned as supervisor.</span>
                            }
                        </p>
                        @if (!string.IsNullOrEmpty(Model.SelectedSession) || Model.SelectedSemester.HasValue)
                        {
                            <a href="@Url.Page("Students")" class="btn btn-outline-light-blue">
                                <i class="bi bi-arrow-clockwise me-2"></i> Clear Filters
                            </a>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<script>
// Update current date and time
function updateDateTime() {
    const now = new Date();
    const options = { 
        year: 'numeric', 
        month: 'short', 
        day: 'numeric',
        hour: '2-digit',
        minute: '2-digit'
    };
    document.getElementById('current-datetime').textContent = now.toLocaleDateString('en-US', options);
}

document.addEventListener('DOMContentLoaded', function() {
    updateDateTime();
    setInterval(updateDateTime, 60000); // Update every minute
});
</script>
