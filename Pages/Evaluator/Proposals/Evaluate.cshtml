@page "/Evaluator/Proposals/Evaluate/{id:int}"
@model FYP1System.Pages.Evaluator.Proposals.EvaluateModel
@{
    ViewData["Title"] = "Evaluate Proposal";
}

<style>
/* Evaluation Page Styling - Light Blue Theme */
.evaluation-page {
    background: linear-gradient(135deg, #e0f2fe 0%, #b3e5fc 100%);
    min-height: calc(100vh - 200px);
    padding: 2rem 0;
}

.page-header {
    background: linear-gradient(135deg, #6fb3d3 0%, #5dade2 100%);
    color: white;
    padding: 2rem;
    border-radius: 15px;
    box-shadow: 0 10px 30px rgba(111, 179, 211, 0.3);
    margin-bottom: 2rem;
}

.evaluation-card {
    background: white;
    border-radius: 15px;
    box-shadow: 0 8px 25px rgba(0,0,0,0.1);
    border: none;
    margin-bottom: 2rem;
    overflow: hidden;
}

.card-header-custom {
    background: linear-gradient(135deg, #6fb3d3 0%, #5dade2 100%);
    color: white;
    padding: 1.5rem;
    border: none;
    font-weight: 600;
}

.form-section {
    padding: 2rem;
}

.score-input {
    background: #f8fafc;
    border: 2px solid #e2e8f0;
    border-radius: 10px;
    padding: 0.75rem;
    transition: all 0.3s ease;
}

.score-input:focus {
    background: white;
    border-color: #6fb3d3;
    box-shadow: 0 0 0 3px rgba(111, 179, 211, 0.1);
}

.status-card {
    border: 2px solid #e2e8f0;
    border-radius: 10px;
    padding: 1rem;
    margin: 0.5rem 0;
    transition: all 0.3s ease;
    cursor: pointer;
}

.status-card:hover {
    border-color: #6fb3d3;
    background: #f8fafc;
}

.status-card.selected {
    border-color: #6fb3d3;
    background: rgba(111, 179, 211, 0.1);
}

.status-accepted {
    border-color: #22c55e;
    background: rgba(34, 197, 94, 0.05);
}

.status-conditions {
    border-color: #f59e0b;
    background: rgba(245, 158, 11, 0.05);
}

.status-rejected {
    border-color: #ef4444;
    background: rgba(239, 68, 68, 0.05);
}

.btn-save {
    background: linear-gradient(135deg, #10b981 0%, #059669 100%);
    color: white;
    border: none;
    border-radius: 10px;
    padding: 0.75rem 2rem;
    font-weight: 600;
    transition: all 0.3s ease;
}

.btn-save:hover {
    color: white;
    transform: translateY(-2px);
    box-shadow: 0 8px 20px rgba(16, 185, 129, 0.3);
}

.btn-submit {
    background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
    color: white;
    border: none;
    border-radius: 10px;
    padding: 0.75rem 2rem;
    font-weight: 600;
    transition: all 0.3s ease;
}

.btn-submit:hover {
    color: white;
    transform: translateY(-2px);
    box-shadow: 0 8px 20px rgba(59, 130, 246, 0.3);
}

.score-display {
    background: linear-gradient(135deg, #6fb3d3 0%, #5dade2 100%);
    color: white;
    padding: 1rem;
    border-radius: 10px;
    text-align: center;
    font-weight: 600;
    font-size: 1.2rem;
}

.evaluation-readonly {
    background: #f8fafc;
    border: 1px solid #e2e8f0;
    border-radius: 8px;
    padding: 1rem;
    margin: 0.5rem 0;
}
</style>

<div class="evaluation-page">
    <div class="container">
        <!-- Page Header -->
        <div class="page-header">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <h1 class="mb-0">
                        <i class="fas fa-clipboard-check me-3"></i>Evaluate Proposal
                    </h1>
                    <p class="mb-0 opacity-90">Provide comprehensive evaluation and feedback</p>
                </div>
                <div class="col-md-4 text-md-end">
                    <a href="/Evaluator/Proposals" class="btn btn-light">
                        <i class="fas fa-arrow-left me-1"></i>Back to Proposals
                    </a>
                </div>
            </div>
        </div>

        <form method="post">
            <div class="row">
                <!-- Main Evaluation Form -->
                <div class="col-lg-8">
                    <!-- Proposal Summary -->
                    <div class="evaluation-card">
                        <div class="card-header-custom">
                            <h5 class="mb-0">
                                <i class="fas fa-file-alt me-2"></i>Proposal Summary
                            </h5>
                        </div>
                        <div class="form-section">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <strong>Student:</strong> @Model.Proposal.Student.User.FullName
                                    </div>
                                    <div class="mb-3">
                                        <strong>Student ID:</strong> @Model.Proposal.Student.StudentId
                                    </div>
                                    <div class="mb-3">
                                        <strong>Program:</strong> @Model.Proposal.Student.Program?.Name
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <strong>Title:</strong> @Model.Proposal.Title
                                    </div>
                                    <div class="mb-3">
                                        <strong>Type:</strong> <span class="badge bg-info">@Model.Proposal.Type</span>
                                    </div>
                                    <div class="mb-3">
                                        <strong>Session:</strong> @Model.Proposal.Session - Semester @Model.Proposal.Semester
                                    </div>
                                </div>
                            </div>
                            
                            @if (!string.IsNullOrEmpty(Model.Proposal.Description))
                            {
                                <div class="mt-3">
                                    <strong>Description:</strong>
                                    <div class="mt-2 p-3 bg-light rounded">
                                        @Model.Proposal.Description
                                    </div>
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Evaluation Scores -->
                    <div class="evaluation-card">
                        <div class="card-header-custom">
                            <h5 class="mb-0">
                                <i class="fas fa-star me-2"></i>Evaluation Scores
                            </h5>
                        </div>
                        <div class="form-section">
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label asp-for="Input.TechnicalMeritScore" class="form-label fw-bold">
                                        Technical Merit Score (0-100)
                                    </label>
                                    @if (Model.CanEdit)
                                    {
                                        <input asp-for="Input.TechnicalMeritScore" type="number" class="form-control score-input" 
                                               min="0" max="100" step="0.1" placeholder="Enter score (0-100)">
                                    }
                                    else
                                    {
                                        <div class="evaluation-readonly">
                                            @(Model.Input.TechnicalMeritScore?.ToString("F1") ?? "Not scored")
                                        </div>
                                    }
                                    <span asp-validation-for="Input.TechnicalMeritScore" class="text-danger"></span>
                                </div>

                                <div class="col-md-6 mb-3">
                                    <label asp-for="Input.InnovationScore" class="form-label fw-bold">
                                        Innovation Score (0-100)
                                    </label>
                                    @if (Model.CanEdit)
                                    {
                                        <input asp-for="Input.InnovationScore" type="number" class="form-control score-input" 
                                               min="0" max="100" step="0.1" placeholder="Enter score (0-100)">
                                    }
                                    else
                                    {
                                        <div class="evaluation-readonly">
                                            @(Model.Input.InnovationScore?.ToString("F1") ?? "Not scored")
                                        </div>
                                    }
                                    <span asp-validation-for="Input.InnovationScore" class="text-danger"></span>
                                </div>

                                <div class="col-md-6 mb-3">
                                    <label asp-for="Input.FeasibilityScore" class="form-label fw-bold">
                                        Feasibility Score (0-100)
                                    </label>
                                    @if (Model.CanEdit)
                                    {
                                        <input asp-for="Input.FeasibilityScore" type="number" class="form-control score-input" 
                                               min="0" max="100" step="0.1" placeholder="Enter score (0-100)">
                                    }
                                    else
                                    {
                                        <div class="evaluation-readonly">
                                            @(Model.Input.FeasibilityScore?.ToString("F1") ?? "Not scored")
                                        </div>
                                    }
                                    <span asp-validation-for="Input.FeasibilityScore" class="text-danger"></span>
                                </div>

                                <div class="col-md-6 mb-3">
                                    <label asp-for="Input.LiteratureReviewScore" class="form-label fw-bold">
                                        Literature Review Score (0-100)
                                    </label>
                                    @if (Model.CanEdit)
                                    {
                                        <input asp-for="Input.LiteratureReviewScore" type="number" class="form-control score-input" 
                                               min="0" max="100" step="0.1" placeholder="Enter score (0-100)">
                                    }
                                    else
                                    {
                                        <div class="evaluation-readonly">
                                            @(Model.Input.LiteratureReviewScore?.ToString("F1") ?? "Not scored")
                                        </div>
                                    }
                                    <span asp-validation-for="Input.LiteratureReviewScore" class="text-danger"></span>
                                </div>
                            </div>

                            @if (Model.Input.OverallScore.HasValue)
                            {
                                <div class="score-display mt-3">
                                    <i class="fas fa-trophy me-2"></i>Overall Score: @Model.Input.OverallScore.Value.ToString("F1")
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Evaluation Status -->
                    <div class="evaluation-card">
                        <div class="card-header-custom">
                            <h5 class="mb-0">
                                <i class="fas fa-check-circle me-2"></i>Evaluation Decision
                            </h5>
                        </div>
                        <div class="form-section">
                            @if (Model.CanEdit)
                            {
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="status-card status-accepted">
                                            <label class="d-flex align-items-center cursor-pointer">
                                                <input type="radio" asp-for="Input.Status" value="@EvaluationStatus.Accepted" class="me-2">
                                                <div>
                                                    <div class="fw-bold text-success">
                                                        <i class="fas fa-check me-1"></i>Accepted
                                                    </div>
                                                    <small class="text-muted">Proposal meets all requirements</small>
                                                </div>
                                            </label>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="status-card status-conditions">
                                            <label class="d-flex align-items-center cursor-pointer">
                                                <input type="radio" asp-for="Input.Status" value="@EvaluationStatus.AcceptedWithConditions" class="me-2">
                                                <div>
                                                    <div class="fw-bold text-warning">
                                                        <i class="fas fa-exclamation-triangle me-1"></i>Accepted with Conditions
                                                    </div>
                                                    <small class="text-muted">Requires minor revisions</small>
                                                </div>
                                            </label>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="status-card status-rejected">
                                            <label class="d-flex align-items-center cursor-pointer">
                                                <input type="radio" asp-for="Input.Status" value="@EvaluationStatus.Rejected" class="me-2">
                                                <div>
                                                    <div class="fw-bold text-danger">
                                                        <i class="fas fa-times me-1"></i>Rejected
                                                    </div>
                                                    <small class="text-muted">Does not meet requirements</small>
                                                </div>
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="evaluation-readonly">
                                    <strong>Status:</strong> 
                                    @switch (Model.Input.Status)
                                    {
                                        case EvaluationStatus.Accepted:
                                            <span class="badge bg-success">
                                                <i class="fas fa-check me-1"></i>Accepted
                                            </span>
                                            break;
                                        case EvaluationStatus.AcceptedWithConditions:
                                            <span class="badge bg-warning">
                                                <i class="fas fa-exclamation-triangle me-1"></i>Accepted with Conditions
                                            </span>
                                            break;
                                        case EvaluationStatus.Rejected:
                                            <span class="badge bg-danger">
                                                <i class="fas fa-times me-1"></i>Rejected
                                            </span>
                                            break;
                                        default:
                                            <span class="badge bg-secondary">@Model.Input.Status</span>
                                            break;
                                    }
                                </div>
                            }
                            <span asp-validation-for="Input.Status" class="text-danger"></span>
                        </div>
                    </div>

                    <!-- Comments and Feedback -->
                    <div class="evaluation-card">
                        <div class="card-header-custom">
                            <h5 class="mb-0">
                                <i class="fas fa-comments me-2"></i>Detailed Feedback
                            </h5>
                        </div>
                        <div class="form-section">
                            <div class="mb-3">
                                <label asp-for="Input.Strengths" class="form-label fw-bold">Strengths</label>
                                @if (Model.CanEdit)
                                {
                                    <textarea asp-for="Input.Strengths" class="form-control" rows="3" 
                                              placeholder="Highlight the strengths of this proposal..."></textarea>
                                }
                                else
                                {
                                    <div class="evaluation-readonly">
                                        @(Model.Input.Strengths ?? "No strengths noted")
                                    </div>
                                }
                                <span asp-validation-for="Input.Strengths" class="text-danger"></span>
                            </div>

                            <div class="mb-3">
                                <label asp-for="Input.Weaknesses" class="form-label fw-bold">Weaknesses</label>
                                @if (Model.CanEdit)
                                {
                                    <textarea asp-for="Input.Weaknesses" class="form-control" rows="3" 
                                              placeholder="Identify areas that need improvement..."></textarea>
                                }
                                else
                                {
                                    <div class="evaluation-readonly">
                                        @(Model.Input.Weaknesses ?? "No weaknesses noted")
                                    </div>
                                }
                                <span asp-validation-for="Input.Weaknesses" class="text-danger"></span>
                            </div>

                            <div class="mb-3">
                                <label asp-for="Input.Recommendations" class="form-label fw-bold">Recommendations</label>
                                @if (Model.CanEdit)
                                {
                                    <textarea asp-for="Input.Recommendations" class="form-control" rows="3" 
                                              placeholder="Provide specific recommendations for improvement..."></textarea>
                                }
                                else
                                {
                                    <div class="evaluation-readonly">
                                        @(Model.Input.Recommendations ?? "No recommendations provided")
                                    </div>
                                }
                                <span asp-validation-for="Input.Recommendations" class="text-danger"></span>
                            </div>

                            <div class="mb-3">
                                <label asp-for="Input.Comments" class="form-label fw-bold">Additional Comments</label>
                                @if (Model.CanEdit)
                                {
                                    <textarea asp-for="Input.Comments" class="form-control" rows="4" 
                                              placeholder="Any additional comments or feedback..."></textarea>
                                }
                                else
                                {
                                    <div class="evaluation-readonly">
                                        @(Model.Input.Comments ?? "No additional comments")
                                    </div>
                                }
                                <span asp-validation-for="Input.Comments" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Sidebar -->
                <div class="col-lg-4">
                    <!-- Action Buttons -->
                    @if (Model.CanEdit)
                    {
                        <div class="evaluation-card">
                            <div class="card-header-custom">
                                <h5 class="mb-0">
                                    <i class="fas fa-save me-2"></i>Actions
                                </h5>
                            </div>
                            <div class="form-section">
                                <div class="d-grid gap-3">
                                    <button type="submit" name="action" value="save" class="btn btn-save">
                                        <i class="fas fa-save me-2"></i>Save Draft
                                    </button>
                                    <button type="submit" name="action" value="submit" class="btn btn-submit">
                                        <i class="fas fa-paper-plane me-2"></i>Submit Evaluation
                                    </button>
                                </div>
                                <div class="mt-3">
                                    <small class="text-muted">
                                        <i class="fas fa-info-circle me-1"></i>
                                        Save Draft allows you to continue later. Submit Evaluation finalizes your review.
                                    </small>
                                </div>
                            </div>
                        </div>
                    }

                    <!-- Evaluation Guidelines -->
                    <div class="evaluation-card">
                        <div class="card-header-custom">
                            <h5 class="mb-0">
                                <i class="fas fa-book me-2"></i>Evaluation Guidelines
                            </h5>
                        </div>
                        <div class="form-section">
                            <div class="mb-3">
                                <h6 class="fw-bold">Technical Merit (0-100)</h6>
                                <small class="text-muted">
                                    Assess the technical soundness, methodology, and implementation approach.
                                </small>
                            </div>
                            <div class="mb-3">
                                <h6 class="fw-bold">Innovation (0-100)</h6>
                                <small class="text-muted">
                                    Evaluate the novelty, creativity, and original contribution of the proposal.
                                </small>
                            </div>
                            <div class="mb-3">
                                <h6 class="fw-bold">Feasibility (0-100)</h6>
                                <small class="text-muted">
                                    Consider the practicality, resources required, and likelihood of successful completion.
                                </small>
                            </div>
                            <div class="mb-3">
                                <h6 class="fw-bold">Literature Review (0-100)</h6>
                                <small class="text-muted">
                                    Review the quality and relevance of literature survey and background research.
                                </small>
                            </div>
                        </div>
                    </div>

                    <!-- Proposal Files -->
                    <div class="evaluation-card">
                        <div class="card-header-custom">
                            <h5 class="mb-0">
                                <i class="fas fa-download me-2"></i>Documents
                            </h5>
                        </div>
                        <div class="form-section">
                            @if (!string.IsNullOrEmpty(Model.Proposal.FilePath))
                            {
                                <a href="/Evaluator/Proposals/Details/@Model.Proposal.Id/Download" class="btn btn-outline-primary w-100 mb-2">
                                    <i class="fas fa-file-pdf me-1"></i>Download Proposal
                                </a>
                            }
                            
                            @if (!string.IsNullOrEmpty(Model.Proposal.AgreementFilePath))
                            {
                                <a href="/Evaluator/Proposals/Details/@Model.Proposal.Id/DownloadAgreement" class="btn btn-outline-info w-100 mb-2">
                                    <i class="fas fa-file-contract me-1"></i>Download Agreement
                                </a>
                            }

                            @if (string.IsNullOrEmpty(Model.Proposal.FilePath) && string.IsNullOrEmpty(Model.Proposal.AgreementFilePath))
                            {
                                <p class="text-muted text-center mb-0">No files available for download.</p>
                            }
                        </div>
                    </div>

                    @if (Model.ExistingEvaluation != null)
                    {
                        <!-- Evaluation History -->
                        <div class="evaluation-card">
                            <div class="card-header-custom">
                                <h5 class="mb-0">
                                    <i class="fas fa-history me-2"></i>Evaluation History
                                </h5>
                            </div>
                            <div class="form-section">
                                <div class="mb-2">
                                    <strong>Created:</strong> @Model.ExistingEvaluation.CreatedAt.ToString("MMM dd, yyyy")
                                </div>
                                <div class="mb-2">
                                    <strong>Last Updated:</strong> @Model.ExistingEvaluation.UpdatedAt.ToString("MMM dd, yyyy")
                                </div>
                                @if (Model.ExistingEvaluation.EvaluatedAt.HasValue)
                                {
                                    <div class="mb-2">
                                        <strong>Submitted:</strong> @Model.ExistingEvaluation.EvaluatedAt.Value.ToString("MMM dd, yyyy")
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Auto-calculate overall score
            const scoreInputs = document.querySelectorAll('input[type="number"]');
            
            function calculateOverallScore() {
                const technical = parseFloat(document.querySelector('input[name="Input.TechnicalMeritScore"]').value) || 0;
                const innovation = parseFloat(document.querySelector('input[name="Input.InnovationScore"]').value) || 0;
                const feasibility = parseFloat(document.querySelector('input[name="Input.FeasibilityScore"]').value) || 0;
                const literature = parseFloat(document.querySelector('input[name="Input.LiteratureReviewScore"]').value) || 0;
                
                const overall = (technical + innovation + feasibility + literature) / 4;
                const overallDisplay = document.querySelector('.score-display');
                
                if (overallDisplay && (technical > 0 || innovation > 0 || feasibility > 0 || literature > 0)) {
                    overallDisplay.innerHTML = `<i class="fas fa-trophy me-2"></i>Overall Score: ${overall.toFixed(1)}`;
                    overallDisplay.style.display = 'block';
                }
            }
            
            scoreInputs.forEach(input => {
                input.addEventListener('input', calculateOverallScore);
            });
            
            // Status card selection
            const statusCards = document.querySelectorAll('.status-card');
            const statusRadios = document.querySelectorAll('input[name="Input.Status"]');
            
            statusRadios.forEach(radio => {
                radio.addEventListener('change', function() {
                    statusCards.forEach(card => card.classList.remove('selected'));
                    if (this.checked) {
                        this.closest('.status-card').classList.add('selected');
                    }
                });
            });
            
            // Initialize selected status card
            const selectedRadio = document.querySelector('input[name="Input.Status"]:checked');
            if (selectedRadio) {
                selectedRadio.closest('.status-card').classList.add('selected');
            }
        });
    </script>
}
